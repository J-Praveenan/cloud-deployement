name: CD - Deploy microservices to Kubernetes

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag to deploy (defaults to latest)"
        required: false
        default: "latest"

env:
  REGISTRY: docker.io
  DOCKER_NAMESPACE: praveenan015
  K8S_NAMESPACE: default
  K8S_MANIFEST_DIR: k8s
  DEPLOY_TAG: ${{ github.event.inputs.tag || 'latest' }}

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Write kubeconfig from secret
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}   # raw kubeconfig YAML
        run: |
          mkdir -p "$HOME/.kube"
          : > "$HOME/.kube/config"
          printf "%s" "${KUBE_CONFIG}" > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"

      - name: Ensure namespace exists
        run: |
          kubectl get ns "${K8S_NAMESPACE}" >/dev/null 2>&1 || kubectl create ns "${K8S_NAMESPACE}"

      - name: Apply Kubernetes manifests
        run: |
          # Apply all manifests recursively from k8s/ (ConfigMaps, Services, StatefulSets, Deployments, etc.)
          kubectl apply -n "${K8S_NAMESPACE}" -R -f "${K8S_MANIFEST_DIR}/"

      - name: Pin Deployments to the chosen image tag
        env:
          TAG: ${{ env.DEPLOY_TAG }}
        run: |
          set -e
          # Update each Deployment to the desired image tag from Docker Hub
          kubectl -n "${K8S_NAMESPACE}" set image deploy/cloud-gateway-app \
            cloud-gateway-app=${{ env.REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/cloudgateway:${TAG} --record
          kubectl -n "${K8S_NAMESPACE}" set image deploy/config-server-app \
            config-server-app=${{ env.REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/configserver:${TAG} --record
          kubectl -n "${K8S_NAMESPACE}" set image deploy/order-service-app \
            order-service-app=${{ env.REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/orderservice:${TAG} --record
          kubectl -n "${K8S_NAMESPACE}" set image deploy/payment-service-app \
            payment-service-app=${{ env.REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/paymentservice:${TAG} --record
          kubectl -n "${K8S_NAMESPACE}" set image deploy/product-service-app \
            product-service-app=${{ env.REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/productservice:${TAG} --record

      - name: Wait for rollouts
        run: |
          set -e
          kubectl -n "${K8S_NAMESPACE}" rollout status deploy/cloud-gateway-app --timeout=180s
          kubectl -n "${K8S_NAMESPACE}" rollout status deploy/config-server-app --timeout=180s
          kubectl -n "${K8S_NAMESPACE}" rollout status deploy/order-service-app --timeout=180s
          kubectl -n "${K8S_NAMESPACE}" rollout status deploy/payment-service-app --timeout=180s
          kubectl -n "${K8S_NAMESPACE}" rollout status deploy/product-service-app --timeout=180s
