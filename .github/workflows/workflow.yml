# This workflow builds all services, builds & pushes Docker images to Docker Hub,
# then applies your k8s manifests to GKE.

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-ordering-system
  GKE_ZONE: us-central1-c

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: product-service
            dir: ProductService
            image: praveenan015/productservice
          - name: payment-service
            dir: PaymentService
            image: praveenan015/paymentservice
          - name: order-service
            dir: OrderService
            image: praveenan015/orderservice
          - name: config-server
            dir: ConfigServer
            image: praveenan015/configserver
          - name: cloud-gateway
            dir: CloudGateway
            image: praveenan015/cloudgateway

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Package the service (produces target/*.jar)
      - name: Build JAR (${{ matrix.name }})
        run: mvn -B -DskipTests package
        working-directory: ${{ matrix.dir }}

      # Build & push the Docker image using the Dockerfile in each service
      - name: Build & Push Image (${{ matrix.name }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dir }}
          file: ${{ matrix.dir }}/Dockerfile
          push: true
          tags: |
            docker.io/${{ matrix.image }}:latest
            docker.io/${{ matrix.image }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: cluster-ordering-system
          location: us-central1-c

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/
